## https://github.com/kubernetes-sigs/aws-load-balancer-controller/blob/main/docs/guide/ingress/annotations.md
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: argocd
  name: argocd-server
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: ci-cluster-ingress
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTPS
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:322620855520:certificate/ec9dfe04-5253-4bd6-a594-c88e69053ed2
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/conditions.argogrpc: |
      [{"field":"http-header","httpHeaderConfig":{"httpHeaderName": "Content-Type", "values":["application/grpc"]}}]
spec:
  ingressClassName: alb
  rules:
    - host: argocd.eks.caiogomes.me
      http:
        paths:
          - path: /
            backend:
              service:
                name: argocd-server
                port:
                  number: 443
            pathType: Prefix
  tls:
    - hosts:
        - argocd.eks.caiogomes.me
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: kube-prometheus-stack
  name: kube-prometheus-stack-prometheus
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: ci-cluster-ingress
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:322620855520:certificate/ec9dfe04-5253-4bd6-a594-c88e69053ed2
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/success-codes: 200-302
spec:
  ingressClassName: alb
  rules:
    - host: prometheus.eks.caiogomes.me
      http:
        paths:
          - path: /
            backend:
              service:
                name: kube-prometheus-stack-prometheus
                port:
                  number: 9090
            pathType: Prefix
  tls:
    - hosts:
        - prometheus.eks.caiogomes.me
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: kube-prometheus-stack
  name: kube-prometheus-stack-grafana
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: ci-cluster-ingress
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:322620855520:certificate/ec9dfe04-5253-4bd6-a594-c88e69053ed2
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/success-codes: 200-302
spec:
  ingressClassName: alb
  rules:
    - host: grafana.eks.caiogomes.me
      http:
        paths:
          - path: /
            backend:
              service:
                name: kube-prometheus-stack-grafana
                port:
                  number: 80
            pathType: Prefix
  tls:
    - hosts:
        - grafana.eks.caiogomes.me
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: kube-prometheus-stack
  name: kube-prometheus-stack-alertmanager
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: ci-cluster-ingress
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:322620855520:certificate/ec9dfe04-5253-4bd6-a594-c88e69053ed2
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/success-codes: 200-302
spec:
  ingressClassName: alb
  rules:
    - host: alertmanager.eks.caiogomes.me
      http:
        paths:
          - path: /
            backend:
              service:
                name: kube-prometheus-stack-alertmanager
                port:
                  number: 9093
            pathType: Prefix
  tls:
    - hosts:
        - alertmanager.eks.caiogomes.me
